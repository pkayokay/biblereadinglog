<div class="mb-4">
  <%= render(HeadingComponent.new(title: "Settings")) %>
</div>
<div data-controller="reminder-form">
  <%= form_with model: @reading_log, data: { turbo: false} do |form| %>
    <%= render(FormErrorsComponent.new(errors: @errors)) %>
      <div class="">
        <%= render(FieldContainerComponent.new(custom_classes: "md:!mb-0 flex-1 w-full md:w-auto")) do %>
          <%= render(LabelComponent.new(for_attribute: "name", title: "What do you want to call this reading log?", form: form)) %>
          <%= render(InputComponent.new(type: "text", form: form, id_and_name: "name", required: true, custom_classes: "")) %>
        <% end %>
        <div class="flex sm:items-center sm:space-y-0 space-y-2 items-start mt-8 mb-5 sm:mb-3 sm:justify-between flex-col sm:flex-row">
          <p class="font-medium text-2xl">Reminders</p>
          <% if @reading_log.is_reminder_enabled && @reading_log.reminder_scheduled_at %>
            <div class="border border-sky-300 rounded-lg text-sm text-sky-800 bg-sky-100 px-2 py-1 inline-block">
              <div class="">Upcoming reminder <%= render_next_occurrence(@reading_log.reminder_scheduled_at) %></div>
            </div>
          <% end %>
        </div>
        <% if @reading_log.is_reminder_enabled && @reading_log.reminder_scheduled_at %>
          <div class="hidden mt-1 mb-6 border border-sky-300 rounded-lg font-medium text-sm text-sky-800 bg-sky-100 px-3 py-1.5 inline-block">
            <% if @reading_log.daily? %>
              <div class="">
                <% if @reading_log.reminder_days.count == 7 %>
                Daily at <%= render_reminder_time(@reading_log.reminder_time) %>
                <% elsif @reading_log.reminder_days.count == 1 %>
                Every <%= @reading_log.reminder_days.map(&:capitalize).join(", ") %> at <%= render_reminder_time(@reading_log.reminder_time) %>
                <% else %>
                  <% if @reading_log.reminder_days.present? %>
                    On <%= @reading_log.reminder_days.map(&:capitalize).join(", ") %> at <%= render_reminder_time(@reading_log.reminder_time) %>
                  <% end %>
                <% end %>
                <% elsif @reading_log.weekly? %>
                Every <%= @reading_log.reminder_days.map(&:capitalize).join(", ") %> at <%= render_reminder_time(@reading_log.reminder_time) %>
                <% elsif @reading_log.monthly? %>
                <div class="">Monthly on the first <%= @reading_log.reminder_days.map(&:capitalize).join(", ") %> at <%= render_reminder_time(@reading_log.reminder_time) %></div>
              <% end %>
            </div>
          </div>
        <% end %>
        <%= render(FieldContainerComponent.new(custom_classes: "flex items-center")) do %>
          <%= form.check_box :is_reminder_enabled, { class: "cursor-pointer w-5 h-5 rounded", data: { action: "change->reminder-form#toggleIsReminderEnabled"}} %>
          <%= render(LabelComponent.new(for_attribute: "is_reminder_enabled", title: "Enable email notifications", form: form, custom_classes: "cursor-pointer ml-3 !text-base" )) %>
        <% end %>

        <div data-reminder-form-target="reminderSection" class="<%= 'hidden' if !@reading_log.is_reminder_enabled %>">
          <%= render(FieldContainerComponent.new) do %>
            <%= render(LabelComponent.new(for_attribute: "reminder_frequency", title: "How often do you want to be reminder?", form: form)) %>
            <%= form.select :reminder_frequency,ReadingLog.reminder_frequencies.keys.filter_map {|a| [a.capitalize, a]}, {}, { class: "form-select", data: { action: "change->reminder-form#updateDaysSelectField",  reminder_form_target: "frequency" } }%>
          <% end %>

          <% day_options = Date::DAYNAMES.map { |day| [day, day.downcase] }.rotate!(1) %>

          <%= render(FieldContainerComponent.new) do %>
            <%= form.label :reminder_days, 'Days', { data: { reminder_form_target: "selectLabel" }, class: "opacity-80 block font-medium text-sm"} %>

            <div data-reminder-form-target="reminderDaysButtons" class="hidden container--day__select">
              <div class="mt-2">
                <%= form.fields_for :reminder_days_multiple do |reminder_days_multiple_form| %>
                  <% day_options.each do |day| %>
                    <%= render(FieldContainerComponent.new(custom_classes: "flex items-center")) do %>
                      <%= reminder_days_multiple_form.check_box day.last, { checked: form.object.reminder_days.include?(day.last), class: "cursor-pointer w-5 h-5 rounded"} %>
                      <%= render(LabelComponent.new(for_attribute: "reminder_days_multiple_#{day.last}", title: day.first, form: form, custom_classes: "cursor-pointer ml-3 !text-base" )) %>
                    <% end %>
                  <% end %>
                <% end %>
              </div>
            </div>

            <%= form.select :reminder_days, day_options, {}, { data: { reminder_form_target: "selectField" }, multiple: true, class: 'hidden form-select' } %>
          <% end %>

          <%= render(FieldContainerComponent.new) do %>
            <%= render(LabelComponent.new(for_attribute: "reminder_time", title: "How often do you want to be reminded?", form: form)) %>
            <%= form.select :reminder_time, time_options_for_select, { selected: @reading_log.reminder_time}, { class: 'form-select' } %>
          <% end %>
        </div>
      </div>
      <%= form.submit "Save changes", class: "mt-2 btn btn--primary md:w-auto", data: { turbo_submits_with: "Saving..."} %>
  <% end %>
<div class="border-t mt-8 pt-8">
  <p class="font-semibold text-2xl">Delete Reading Log</p>
  <p class="opacity-80 mt-2 mb-5">This will permanently delete the reading log.</p>
  <%= button_to "Delete Reading Log", reading_log_path, method: :delete, data: { turbo_confirm: "Are you sure you want to delete this?"},class: "btn w-auto btn--slim" %>
</div>
